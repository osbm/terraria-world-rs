---
name: Build, test and publish the rust library
on:
  push:
    branches: [main]
    tags: [v*]
  pull_request:
    branches: [main]
jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up Nix
        uses: cachix/install-nix-action@v27
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
      - name: Run build
        run: nix develop --command cargo test --all-features --verbose
  clippy:
    name: Run Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up Nix
        uses: cachix/install-nix-action@v27
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
      - name: Run clippy
        run: nix develop --command cargo clippy
  publish-to-crates-io:
    name: Publish to crates.io
    needs: tests
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Publish terraria-world
        run: cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
  generate-changelog:
    name: Generate Changelog
    runs-on: ubuntu-latest
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    outputs:
      changelog: ${{ steps.git-cliff.outputs.content }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: get git debug info
        run: git remote -v
      - name: Generate CHANGELOG
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          args: --verbose --latest
          github_token: ${{ github.token }}
      - name: Print the changelog
        run: cat "${{ steps.git-cliff.outputs.changelog }}"
  release:
    name: Release
    needs: [tests, generate-changelog]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Make GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ needs.generate-changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
  docs:
    name: Build and Deploy Documentation
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Nix
        uses: cachix/install-nix-action@v27
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
      - name: Build documentation
        run: nix build .#documentation
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./result
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
