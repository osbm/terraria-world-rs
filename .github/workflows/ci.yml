---
name: build and test rust library
on:
  push:
  pull_request:
    branches: [main]
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Nix
        uses: cachix/install-nix-action@v27
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
      - name: Run build
        run: nix develop --command cargo test --all-features --verbose
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Nix
        uses: cachix/install-nix-action@v27
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
      - name: Run clippy
        run: nix develop --command cargo clippy
  publish-to-crates-io:
    name: Publish to crates.io
    needs: tests
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Publish terraria-world
        run: cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
  generate-changelog:
    name: Generate Changelog
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    outputs:
      changelog: ${{ steps.git-cliff.outputs.content }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Generate CHANGELOG
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          args: -vv --latest --strip header
          github_token: ${{ github.token }}
  release:
    name: Release
    needs: [tests, generate-changelog]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Make GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ needs.generate-changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
